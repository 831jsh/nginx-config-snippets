    # trailing / so that we don't match /my-flask-app-suffix. From the docs,

    # If a location is defined by a prefix string that ends with the slash
    # character, and requests are processed by one of proxy_pass,
    # fastcgi_pass, scgi_pass, uwsgi_pass, or memcached_pass, then in
    # response to a request with URI equal to this string, but without the
    # trailing slash, a permanent redirect with the code 301 will be returned
    # to the requested URI with the slash appended.

    location /my-flask-app/ {
        include uwsgi_params;
        uwsgi_param SCRIPT_NAME /my-flask-app;
        uwsgi_modifier1 30;
        # The uwsgi_modifier1 30 option sets the uWSGI modifier
        # UWSGI_MODIFIER_MANAGE_PATH_INFO. This per-request modifier
        # instructs the uWSGI server to rewrite the PATH_INFO value
        # removing the SCRIPT_NAME from it.
        uwsgi_pass unix:/run/www-sockets/my-flask-app.sock;

        # note nginx doesn't do any external process management (imo a good
        # thing) so you're responsible for starting uwsgi yourself;
        # I use supervisord (apt-get install supervisor), see
        # /etc/supervsior/conf.d/my-flask-app.conf
    }

    location /my-flask-app/static/ {
        alias /opt/my-flask-app/static/;
    }
